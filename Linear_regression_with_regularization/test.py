# -*- coding: utf-8 -*-
"""Q7_forecast.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QygJyzTuf4wJ3ioxCqF0boFIbPNbBJd6
"""

import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

data = pd.read_csv('https://raw.githubusercontent.com/jbrownlee/Datasets/master/daily-min-temperatures.csv', header=0, parse_dates=[0], index_col=0).squeeze()

split_date = pd.to_datetime('1988-01-01')  # Set the date to split the data into training and testing sets

train_data = data[:split_date]
test_data = data[split_date:]

X_train = pd.DataFrame({'t': train_data[:-1]})
y_train = train_data[1:]

X_test = pd.DataFrame({'t': test_data[:-1]})
y_test = test_data[1:]

lr = LinearRegression()
lr.fit(X_train, y_train)

y_pred_train = lr.predict(X_train)
y_pred_test = lr.predict(X_test)

rmse_train = mean_squared_error(y_train, y_pred_train, squared=False)
rmse_test = mean_squared_error(y_test, y_pred_test, squared=False)

print('Train RMSE:', rmse_train)
print('Test RMSE:', rmse_test)

plt.figure(figsize=(12, 6))
plt.plot(train_data.index[1:], y_train, label='True Train', color='#e4e4c5')
plt.plot(train_data.index[1:], y_pred_train, label='Predicted Train', color='#9bc1bc')
plt.title('Train Data')
plt.legend()
plt.show()

plt.figure(figsize=(12, 6))
plt.plot(test_data.index[1:], y_test, label='True Test', color='#e4e499')
plt.plot(test_data.index[1:], y_pred_test, label='Predicted Test', color='#5ca4a9')
plt.title('Test Data')
plt.legend()
plt.show()

plt.figure(figsize=(12, 6))
plt.plot(train_data.index[1:], y_train, label='True Train', color='#e4e4c5')
plt.plot(train_data.index[1:], y_pred_train, label='Predicted Train', color='#9bc1bc')
plt.plot(test_data.index[1:], y_test, label='True Test', color='#e4e499')
plt.plot(test_data.index[1:], y_pred_test, label='Predicted Test', color='#5ca4a9')
plt.title('Prediction for Train and Test Data')
plt.axvline(x=split_date, linestyle='--', color='black', label='Split Date')
plt.legend()
plt.show()